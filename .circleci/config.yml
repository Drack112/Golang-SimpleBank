defaults: &defaults
  docker:
    - image: circleci/golang
      environment:
        CIRCLECI: 1
    - image: circleci/postgres:12.2
      environment:
        POSTGRES_USER: db_test_user
        POSTGRES_PASSWORD: db_test_password
        POSTGRES_DB: db_test_database
  working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}

version: 2
jobs:
  build-golang:
    <<: *defaults
    steps:
      - run:
          name: Build Golang App 🐇
          command: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .

  checkout:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Get Dependencies 📪
          command: go get -v -t -d ./...
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - persist_to_workspace:
          root: .
          paths: .

  unit-test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
      - run:
          name: Install PostgreSQL CLI on ubuntu 🏓
          command: sudo apt-get update && sudo apt-get install postgresql
      - run:
          name: Execute migrations 🍮
          command: psql -d "host=localhost port=5432 dbname=db_test_database user=db_test_user password=db_test_password" < scripts/init/reset.sql
      - run:
          name: "Install Coveralls and Cover 🚂"
          command: |
            go get golang.org/x/tools/cmd/cover && go get github.com/mattn/goveralls
      - run:
          name: Unit Tests 🌏 & Publish Coverage to Coveralls.io 🖥️
          command: |
            ./test.sh -s && goveralls -coverprofile=coverage.txt -service semaphore -repotoken $COVERALLS_TOKEN

workflows:
  version: 2
  test-deploy-purge:
    jobs:
      - checkout
      - build-golang:
          requires:
            - checkout
      - unit-test:
          requires:
            - checkout
# VS Code Extension Version: 1.3.0
