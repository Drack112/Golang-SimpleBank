syntax = "proto3";

package pb;

option go_package = "github.com/Drack112/simplebank/pb";

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_login_user.proto";
import "rpc_update_user.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info : {title : "Simple Bank API";
version : "1.2";
contact : {
name:
  "Drack112";
url:
  "https://github.com/Drack112/Golang-Simplebank";
email:
  "banksupport@gmail.com";
};
}
;
}
;

service SimpleBank {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post : "/api/v1/create_user"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description : "Use this API to create a new user";
  summary:
    "Create new user";
  };
}
rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
  option (google.api.http) = {
    patch : "/api/v1/update_user"
    body : "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description : "Use this API to update user";
summary:
  "Update user";
};
}
rpc LoginUser(LoginUserRequest) returns (LoginUserResponse) {
  option (google.api.http) = {
    post : "/api/v1/login_user"
    body : "*"
  };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description : "Use this API to login user and get access token & refresh "
                  "token";
summary:
  "Login user";
};
}
}
